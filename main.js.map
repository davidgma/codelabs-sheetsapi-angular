{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about-routing.module.ts","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/alasql-demo/alasql-demo-routing.module.ts","webpack:///./src/app/alasql-demo/alasql-demo.component.css","webpack:///./src/app/alasql-demo/alasql-demo.component.html","webpack:///./src/app/alasql-demo/alasql-demo.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/google/google-data.ts","webpack:///./src/app/google/google-routing.module.ts","webpack:///./src/app/google/google.component.css","webpack:///./src/app/google/google.component.html","webpack:///./src/app/google/google.component.ts","webpack:///./src/app/google/google.service.ts","webpack:///./src/app/hello.component.ts","webpack:///./src/app/not-found.component.ts","webpack:///./src/app/order-edit/order-edit-routing.module.ts","webpack:///./src/app/order-edit/order-edit.component.css","webpack:///./src/app/order-edit/order-edit.component.html","webpack:///./src/app/order-edit/order-edit.component.ts","webpack:///./src/app/orders/order.ts","webpack:///./src/app/orders/orders-routing.module.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/assets/json-orders.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent } from './about.component';\n\nconst routes: Routes = [\n  { path: 'about', component: AboutComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AboutRoutingModule { }","module.exports = \"\"","module.exports = \"<p>\\nThis is my attempt to follow the steps in the \\n<a href=\\\"https://codelabs.developers.google.com/codelabs/sheets-api/#0\\\">Codelabs Google Sheets-API Tutorial.</a> The tutorial teaches how to use the Google Sheets-API to read Google Docs spreadsheets from a web application. It is based around Node, Express and Javascript but I think Angular and Typescript are much cooler so I wanted to use these technologies while going through the tutorial.\\n</p>\\n<p>\\nThe tutorial uses an SQL database which is accessed via the npm package sqlite3. I tried using this but as far as I could tell it only works from within Node and not on the client-side. So I couldn't use it in Stackblitz as there is no Node server side so instead I used the npm package <a href=\\\"https://github.com/agershun/alasql\\\">Alasql</a> which does work on the client side. It took a certain amount of tinkering to get it to work and the section \\n<a routerLink=\\\"/alasql-demo\\\" routerLinkActive=\\\"active\\\">\\n\\t\\tAlaSql Demo</a>\\n shows some simple examples of what works.\\n</p>\\n<p>\\nI've actually had to abandon doing this in Stackblitz because, as far as I can tell, there is a fundamental security flaw with it. To use Google API's OAuth, you need to use a client secret key. When a user grants the app permission to access his/her personal data on Google Sheets, anyone with that secret key would be able to access that person's data in their own app. In Stackblitz, the secret key will always be visible to everyone because anyone can go in and view the source code. In an application built in VS Code on a local computer, the secret key would be kept hidden from the outside world and presumably would have to be excluded in any output to git. But I don't see how it would be possible in Stackblitz to keep the secret key secret.\\n</p>\\n<p>\\nInstead, perhaps the way forward is to use Google Apps Script and the tool clasp which, as far as I can tell (I haven't tried it yet) allows you to write Typescript code and upload it to Google Apps Script. For Google Apps Script, I think, the secret key and other authorisation codes are kept behind the scenes and even the writer of the app script doesn't see it. \\n</p>\\n<p>I think that Stackblitz would be fine for instances where a Google Drive document or sheet that is shared with everyone needs to be accessed.\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","import { NgModule } from '@angular/core';\n//import { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AlasqlDemoComponent } from './alasql-demo.component';\n\nconst alasqlDemoRoutes: Routes = [\n  { path: 'alasql-demo', component: AlasqlDemoComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(alasqlDemoRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AlasqlDemoRoutingModule { }","module.exports = \"\"","module.exports = \"<p></p>\\n<div class=\\\"mdl-grid\\\" *ngIf=\\\"comments\\\">\\n\\t<section id=\\\"orders\\\" class=\\\"mdl-cell mdl-cell--8-col relative\\\" *ngFor=\\\"let comment of comments\\\">\\n\\t\\t<div class=\\\"mdl-grid\\\">\\n\\t\\t\\t{{ comment }}\\n\\t\\t</div>\\n\\t</section>\\n\\n</div>\\n<p>Cities:</p>\\n<div class=\\\"mdl-grid\\\" *ngIf=\\\"cities\\\">\\n\\t<section id=\\\"cities\\\" class=\\\"mdl-cell mdl-cell--8-col relative\\\" *ngFor=\\\"let city of cities\\\">\\n\\t\\t<div class=\\\"mdl-grid\\\">\\n\\t\\t\\t{{ city }}\\n\\t\\t</div>\\n\\t</section>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router,\n         NavigationExtras } from '@angular/router';\nimport * as alasql from 'alasql';\nimport { Observable } from \"rxjs\";\n//import { parse } from 'alasql';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  //selector: 'app-alasql-demo',\n  templateUrl: './alasql-demo.component.html',\n  styleUrls: ['./alasql-demo.component.css']\n})\nexport class AlasqlDemoComponent implements OnInit {\n\n  constructor(private dataService: DataService, public router: Router) { }\n  comments: Array<string> = new Array<string>(\"initializing...\");\n  cities: Array<string> = new Array<string>();\n  jsonOrders: any; // a Json object with the orders\n\n\n\n  async ngOnInit() {\n\n    await alasql.promise(\n      \"DROP TABLE IF EXISTS cities\")\n      .then((res) => {\n        this.comments.push('Return from create table: ' + res.toString());\n      });\n\n    await alasql.promise(\n      \"CREATE TABLE cities (city string, population number)\")\n      .then((res) => {\n        this.comments.push('Return from create table: ' + res.toString());\n      });\n\n    await alasql.promise(\"INSERT INTO cities VALUES ('Rome',2863224),('Paris',2249975),('Berlin',3517424),('Madrid',3041579)\").then((res) => {\n      this.comments.push('Return from insert: ' + res.toString());\n    });\n\n    await alasql.promise(\"SELECT * FROM cities WHERE population < 3500000 ORDER BY population DESC\").then((res) => {\n      this.comments.push('Return from select: ' + JSON.stringify(res));\n      for (let i = 0; i < res.length; i++) {\n        let obj: Object = res[i];\n        this.cities.push(obj[\"city\"] + \" (population \" + obj[\"population\"]\n          + \")\");\n      }\n    });\n\n    await this.dataService.getOrders().subscribe(data => {\n      this.jsonOrders = data;\n    });\n\n    await alasql.promise(\"drop table if exists t_orders\");\n    await alasql.promise(\"create table t_orders (\"\n      + \"id int NOT NULL PRIMARY KEY, \"\n      + \"customerName string, \"\n      + \"productCode string, \"\n      + \"unitsOrdered int, \"\n      + \"unitPrice number, \"\n      + \"status string, \"\n      + \"createdAt date, \"\n      + \"updatedAt date)\"\n    );\n    await alasql.promise(\"insert into t_orders select * from ?\", [this.jsonOrders]);\n\n    //await alasql.promise(\"SELECT customerName FROM ?\", [this.jsonOrders])\n    let fieldName = \"customerName\";\n    await alasql.promise(\"SELECT \" + fieldName + \" FROM t_orders\")\n    .then((res) => {\n      this.comments.push('Return from select: ' + JSON.stringify(res));\n      for (let i = 0; i < res.length; i++) {\n        let obj: Object = res[i];\n        this.cities.push(obj[fieldName]);\n      }\n    });\n\n    this.comments.push(\"here2\");\n  }\n \n\n}","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent }    from './not-found.component';\n\nconst appRoutes: Routes = [\n  { path: '',   redirectTo: '', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: false // <-- debugging purposes only\n\n      }\n    )\n  ],\n  exports: [\n    RouterModule\n  ],\n  providers: [\n    \n  ]\n})\nexport class AppRoutingModule { }\n\n\n/*\nCopyright 2017-2018 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/","module.exports = \"p {\\n  font-family: Lato;\\n}\"","module.exports = \"<hello name=\\\"{{ name }}\\\"></hello>\\n\\n<nav>\\n\\t<a routerLink=\\\"/orders\\\" routerLinkActive=\\\"active\\\">\\n\\t\\tOrders</a>\\n\\t<a routerLink=\\\"/alasql-demo\\\" routerLinkActive=\\\"active\\\">\\n\\t\\tAlaSql Demo</a>\\n\\t<a routerLink=\\\"/google\\\" routerLinkActive=\\\"active\\\">\\n\\t\\tGoogle</a>\\n\\t<a routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">\\n\\t\\tAbout</a>\\n</nav>\\n\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport * as alasql from 'alasql';\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Sheets API Angular Version';\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HelloComponent } from './hello.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DataService } from './services/data.service';\nimport { AlasqlDemoRoutingModule } from './alasql-demo/alasql-demo-routing.module';\nimport { AlasqlDemoComponent } from './alasql-demo/alasql-demo.component';\nimport { PageNotFoundComponent } from './not-found.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrdersRoutingModule } from './orders/orders-routing.module';\nimport { OrderEditRoutingModule } from './order-edit/order-edit-routing.module';\nimport { AboutComponent } from './about/about.component';\nimport { AboutRoutingModule } from './about/about-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { \n  MatButtonModule,\n  MatTooltipModule,\n  MatCardModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatMenuModule,\n  MatInputModule\n  \n } from '@angular/material';\nimport { OrderEditComponent } from './order-edit/order-edit.component';\nimport { GoogleService } from './google/google.service';\nimport { GoogleComponent } from './google/google.component';\nimport { GoogleRoutingModule } \nfrom './google/google-routing.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    OrdersRoutingModule,\n    OrderEditRoutingModule,\n    AlasqlDemoRoutingModule,\n    AboutRoutingModule,\n    GoogleRoutingModule,\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    HelloComponent,\n    AlasqlDemoComponent,\n    PageNotFoundComponent,\n    OrdersComponent,\n    AboutComponent,\n    OrderEditComponent,\n    GoogleComponent\n  ],\n  bootstrap: [AppComponent],\n  providers: [DataService, GoogleService]\n})\nexport class AppModule {\n  // Diagnostic only: inspect router configuration\n  constructor(router: Router) {\n    console.log('Routes: ', JSON.stringify(\n      router.config, undefined, 2));\n  }\n\n}\n","export class GoogleData {\n    public profile: any = null;\n    public id_token: string = \"\";\n    public googleUser: any;\n  \n    public toString(): string {\n      let ret = \"\";\n      if (this.profile == null) {\n        return \"You are not connected\";\n      }\n      else {\n        ret += \"ID: \" + this.profile.getId() + \". \";\n      //console.log('Full Name: ' + this.profile.getName());\n      console.log('Given Name: ' + this.profile.getGivenName());\n      console.log('Family Name: ' + this.profile.getFamilyName());\n      console.log(\"Image URL: \" + this.profile.getImageUrl());\n      console.log(\"Email: \" + this.profile.getEmail());\n      \n      }\n      if (this.id_token.length != 0) {\n        console.log(\"ID Token: \" + this.id_token);\n      }\n      return ret;\n    }\n  }","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GoogleComponent } from './google.component';\n\nconst routes: Routes = [\n  { path: 'google', component: GoogleComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class GoogleRoutingModule { }","module.exports = \"\"","module.exports = \"<br>\\n\\n<div class=\\\"g-signin2\\\" data-onsuccess=\\\"onSignIn\\\" data-theme=\\\"dark\\\">\\n    <br>\\n</div>\\n<p>\\n    The Google Sign-in button should appear above.\\n</p>\\n<section *ngIf=\\\"googleData!=null;else noAuth\\\">\\n    <p>The following information was retrieved from your Google account:</p>\\n    <p>\\n        Name: {{ googleData.profile.getName() }}<br> ID: {{ googleData.profile.getId() }}<br> Given Name: {{ googleData.profile.getGivenName()}}<br>        Family\\n        Name: {{ googleData.profile.getFamilyName() }}<br> Email address: {{ googleData.profile.getEmail() }}<br>\\n    </p>\\n</section>\\n<ng-template #noAuth>\\n    <p>Not logged in.</p>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { GoogleService } from './google.service';\nimport { GoogleData } from './google-data';\n\n@Component({\n  selector: 'app-google',\n  templateUrl: './google.component.html',\n  styleUrls: ['./google.component.css']\n})\nexport class GoogleComponent implements OnInit {\n\n  // This is the Google javascript API file we want to load.\n  private javascriptFile = \"https://apis.google.com/js/platform.js\";\n\n  public googleData: GoogleData = null;\n\n  constructor(public data: GoogleService) { }\n\n  ngOnInit() {\n    console.log(\"Loading the javascript API file.\");\n    let node = document.createElement('script');\n    node.src = this.javascriptFile;\n    node.type = 'text/javascript';\n    node.charset = 'utf-8';\n    document.getElementsByTagName('head')[0]\n      .appendChild(node);\n    node.onload = () => {\n      console.log(\"The javascript file has been loaded.\");\n      this.data.getGoogleData().then((data) => {\n        this.googleData = data;\n        this.showInfo(data.googleUser);\n      });\n    }\n  }\n\n  public showInfo(googleUser) {\n    // Useful data for your client-side scripts:\n    var profile = googleUser.getBasicProfile();\n    console.log(\"ID: \" + profile.getId());\n    // Don't send this directly to your server!\n    console.log('Full Name: ' + profile.getName());\n    console.log('Given Name: ' + profile.getGivenName());\n    console.log('Family Name: ' + profile.getFamilyName());\n    console.log(\"Image URL: \" + profile.getImageUrl());\n    console.log(\"Email: \" + profile.getEmail());\n\n    // The ID token you need to pass to your backend:\n    var id_token = googleUser.getAuthResponse().id_token;\n    console.log(\"ID Token: \" + id_token);\n  }\n\n  // OLD BUT KEEP: \n  // This stops a compile error for the type window.onSignIn.\n  // Alternate: (<any>window).onSignIn = (googleUser) => this.onSignIn(googleUser);\n  // Alternate2: window[\"onSignIn\"] = (googleUser) => this.onSignIn(googleUser);\n  // Alternate3: (window as any).onSignIn = (googleUser) => this.onSignIn(googleUser);\n  //declare global {\n  //  interface Window { onSignIn: (googleuser: any) => void; }\n  //}\n  // window.onSignIn = (googleUser) => this.onSignIn(googleUser);\n\n}","// This is a version of google-data-service that doesn't use RxJS\n// The import code came from https://github.com/rubenCodeforges/ng-gapi/blob/master/src/GoogleApiService.ts\n\nimport { Injectable } from '@angular/core';\nimport { GoogleData } from './google-data';\n\n@Injectable()\nexport class GoogleService {\n\n  public data: GoogleData;\n  private promises = new Array<Promise<void>>();\n  public googleUser: any;\n\n  constructor() {\n    let p1 = new Promise<void>((resolve) => {\n      // Listen to the onSignIn event from the html data-onsuccess=\"onSignIn\"\n      window[\"onSignIn\"] = (googleUser) => {\n        this.googleUser = googleUser;\n        resolve();\n      };\n    });\n    this.promises.push(p1);\n  }\n\n  public getGoogleData(): Promise<GoogleData> {\n    let p = new Promise<GoogleData>((resolve) => {\n      // Wait until there is data\n      Promise.all(this.promises).then(() => {\n        let gd = new GoogleData();\n        gd.googleUser = this.googleUser;\n        gd.profile = this.googleUser.getBasicProfile();\n        gd.id_token = this.googleUser.getAuthResponse().id_token;\n        console.log('Full Name: ' + gd.profile.getName());\n        resolve(gd);\n      });\n    });\n    return p;\n  }\n\n\n  /* OLD\n  public haveAuth = false;\n  public client_id =\n  \"492755457190-ccvd44h31u9t4043g72jlvpk2dsel205.apps.googleusercontent.com\"\n  // no longer used\n  public loadAuth() {\n    let gapi: any;\n    gapi.load(\"client\", () => {\n      console.log(\"api loaded\");\n      gapi.client.load('sheets', 'v4', () => {\n        console.log(\"sheets v4 loaded\");\n        let scope = [\n          //  'https://www.googleapis.com/auth/spreadsheets',\n          // View your Google Spreadsheets\n          'https://www.googleapis.com/auth/spreadsheets.readonly'\n        ];\n        let immediate = false;\n        gapi.auth.authorize({\n          client_id: this.client_id,\n          scope: scope, immediate: immediate\n        }, authResult => {\n          if (authResult && !authResult.error) {\n            console.log(\"Auth success\");\n            this.haveAuth = true;\n            this.run();\n          } else {\n            console.log(\"Auth error: \" + authResult.error);\n          }\n        });\n        //this.run();\n      });\n    });\n  }\n \n\n  // no longer used\n  private async run() {\n    let gapi: any;\n    gapi.client.load('sheets', 'v4', () => {\n      console.log(\"sheets loaded again\");\n      //gapi.client.spreadsheets.values.get({\n      gapi.client.sheets.spreadsheets.values.get({\n        spreadsheetId: '1GKWxuvh6cp2nGyetJsWIcGWD2J8zBSB8dZPGoafCkLE',\n        range: 'foods!A1:C',\n      }).then(function (response) {\n        let range = response.result;\n        console.log(range);\n      });\n\n    });\n  }\n */\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'hello',\n  template: `<h1>The {{name}}</h1>`,\n  styles: [`h1 { font-weight: normal; }`]\n})\nexport class HelloComponent  {\n  @Input() name: string;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  template: '<h2>Page not found</h2>'\n})\nexport class PageNotFoundComponent {}\n\n\n/*\nCopyright 2017-2018 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrderEditComponent } from './order-edit.component';\n\nconst routes: Routes = [\n  { path: 'edit/:id', component: OrderEditComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class OrderEditRoutingModule { }","module.exports = \".floating-box {\\n    \\n    display: inline-block;\\n    width: 250px;\\n    margin: 10px; \\n    vertical-align: top;\\n}\"","module.exports = \"<br>\\n<mat-toolbar color=\\\"primary\\\">\\n\\t<p>Edit order #{{order.id}}</p>\\n</mat-toolbar>\\n<br>\\n<section>\\n\\t<div class=\\\"floating-box\\\">\\n\\t\\t<mat-card>\\n\\t\\t\\t<form>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Customer Name\\\" [(ngModel)]=\\\"editedOrder.customerName\\\" name=\\\"customerName\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field>\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Product Code\\\" [(ngModel)]=\\\"editedOrder.productCode\\\" name=\\\"productCode\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field class=\\\"full-width\\\">\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Units Ordered\\\" [(ngModel)]=\\\"editedOrder.unitsOrdered\\\" name=\\\"unitsOrdered\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field class=\\\"full-width\\\">\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Unit Price\\\" [(ngModel)]=\\\"editedOrder.unitPrice\\\" name=\\\"unitPrice\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field class=\\\"full-width\\\">\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Status\\\" [(ngModel)]=\\\"editedOrder.status\\\" name=\\\"status\\\">\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t</form>\\n\\t\\t\\t<mat-card-actions>\\n\\t\\t\\t\\t<button (click)=\\\"onSubmit()\\\" mat-button matTooltip=\\\"Save\\\"\\n        [routerLink]=\\\"['/orders']\\\">\\n      <mat-icon>save\\n        </mat-icon>\\n      </button>\\n      <button mat-button matTooltip=\\\"Cancel\\\" \\n      [routerLink]=\\\"['/orders']\\\">\\n      <mat-icon>cancel\\n        </mat-icon>\\n      </button>\\n\\t\\t\\t</mat-card-actions>\\n\\t\\t</mat-card>\\n\\t</div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { DataService } from '../services/data.service';\nimport { Order } from '../orders/order';\n\n@Component({\n  selector: 'app-order-edit',\n  templateUrl: './order-edit.component.html',\n  styleUrls: ['./order-edit.component.css']\n})\nexport class OrderEditComponent implements OnInit {\n\n  order: Order; // the original\n  editedOrder: Order = new Order(); // the edited version\n  constructor(private dataService: DataService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    \n    //console.log(\"params: \" + this.route.params == null)\n    this.route.params.forEach((params: Params) => {\n      if (params['id'] !== undefined) {\n        //console.log(\"params id: \" + params['id']);\n        let id = +params['id'];\n        //console.log(\"params id: \" + id.toString());\n        this.dataService.getOrder(id)\n            .subscribe((order) => {\n              this.order = order;\n              this.editedOrder.copyInto(order)\n              });\n      } \n    });\n  }\n\n  onSubmit() {\n    //console.log(\"Saving order... \" + JSON.stringify(this.editedOrder));\n    this.order.id = this.editedOrder.id;\n    this.order.customerName = this.editedOrder.customerName;\n    this.order.productCode = this.editedOrder.productCode;\n    this.order.unitsOrdered = this.editedOrder.unitsOrdered;\n    this.order.unitPrice = this.editedOrder.unitPrice;\n    this.order.status = this.editedOrder.status;\n    this.order.updatedAt = new Date();\n    this.order.temporary = false;\n    //console.log(\"form: \" + JSON.stringify(form.value))\n  }\n\n}","export class Order {\n  id: number;\n  customerName: string;\n  productCode: string;\n  unitsOrdered: number;\n  unitPrice: number;\n  status: string;\n  createdAt: Date;\n  updatedAt: Date;\n  temporary: boolean = false;\n\n  public copyInto(order: Order) {\n    this.id = order.id;\n    this.customerName = order.customerName;\n    this.productCode = order.productCode;\n    this.unitsOrdered = order.unitsOrdered;\n    this.unitPrice = order.unitPrice;\n    this.status = order.status;\n    this.createdAt = order.createdAt;\n    this.updatedAt = order.updatedAt;\n    this.temporary = order.temporary;\n  }\n}","import { NgModule } from '@angular/core';\n//import { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OrdersComponent } from './orders.component';\n\nconst ordersRoutes: Routes = [\n  { path: 'orders', component: OrdersComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(ordersRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class OrdersRoutingModule { }","module.exports = \".fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\n     Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto;\\n}\\n.floating-box {\\n    display: inline-block;\\n    width: 250px;\\n    margin: 10px; \\n    vertical-align: top;\\n}\\n.ordersToolbar {\\n  color: black;\\n  background-color: rgb(40, 144, 241);\\n  border-top-left-radius: 10px;\\n  border-top-right-radius: 10px;\\n}\\n.add-order-button {\\n  color: red;\\n}\\n.card-area {\\n  background-color: rgb(231, 228, 228);\\n  border-bottom-left-radius: 10px;\\n  border-bottom-right-radius: 10px;\\n}\\n\\n\"","module.exports = \"<br>\\n<mat-toolbar class=\\\"ordersToolbar\\\" color=\\\"primary\\\">\\n\\t<p>Customer Order System</p>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"add-order-button\\\" mat-icon-button matTooltip=\\\"Add\\\"\\n  (click)=\\\"addNewOrder()\\\">\\n\\t<mat-icon>add\\n\\t</mat-icon>\\n  </button>\\n\\t<button mat-icon-button matTooltip=\\\"Options\\\"\\n  [matMenuTriggerFor]=\\\"optionsMenu\\\">\\n\\t<mat-icon>menu\\n\\t</mat-icon>\\n  </button>\\n  <mat-menu #optionsMenu=\\\"matMenu\\\">\\n  <button (click)=\\\"sortByOrderNumber()\\\" \\n  mat-menu-item>Sort by Order Number</button>\\n  <button (click)=\\\"sortByPrice()\\\"\\n  mat-menu-item>Sort by Price</button>\\n</mat-menu>\\n</mat-toolbar>\\n\\n<section class=\\\"card-area\\\">\\n\\n\\t<div class=\\\"floating-box\\\" *ngFor=\\\"let order of orders\\\">\\n\\t\\t<mat-card>\\n\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t<mat-card-title>Order #{{order.id}}\\n\\t\\t\\t\\t</mat-card-title>\\n\\t\\t\\t</mat-card-header>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t<table mat-table class=\\\"order-details\\\">\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th>Customer</th>\\n\\t\\t\\t\\t\\t\\t<td>{{order.customerName}}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th>Product code</th>\\n\\t\\t\\t\\t\\t\\t<td>{{order.productCode}}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th>Units ordered</th>\\n\\t\\t\\t\\t\\t\\t<td>{{order.unitsOrdered}}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th>Unit price (USD)</th>\\n\\t\\t\\t\\t\\t\\t<td>{{order.unitPrice}}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th>Status</th>\\n\\t\\t\\t\\t\\t\\t<td>{{order.status}}</td>\\n\\t\\t\\t\\t\\t</tr>\\n          <tr>\\n\\t\\t\\t\\t\\t\\t<th>Created</th>\\n\\t\\t\\t\\t\\t\\t<td>{{order.createdAt.toLocaleString('en-GB')}}</td>\\n\\t\\t\\t\\t\\t</tr>\\n          <tr>\\n\\t\\t\\t\\t\\t\\t<th>Updated</th>\\n\\t\\t\\t\\t\\t\\t<td>{{order.updatedAt.toLocaleString('en-GB')}}</td>\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t\\t<mat-card-actions>\\n\\t\\t\\t\\t<button mat-icon-button matTooltip=\\\"Edit\\\"\\n        [routerLink]=\\\"['/edit', order.id]\\\">\\n      <mat-icon>edit\\n        </mat-icon>\\n      </button>\\n\\t\\t\\t\\t<button mat-icon-button matTooltip=\\\"Delete\\\"\\n        (click)=\\\"onDelete(order.id)\\\">\\n      <mat-icon>delete\\n        </mat-icon>\\n        </button>\\n\\t\\t\\t</mat-card-actions>\\n\\t\\t</mat-card>\\n\\t</div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport * as alasql from 'alasql';\nimport { Observable } from \"rxjs\";\nimport { DataService } from '../services/data.service';\nimport { Order } from './order';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n  jsonOrders: Array<Order>;\n  orders: Array<Order> = new Array<Order>();\n  constructor(private dataService: DataService,\n  private router: Router) { }\n\n  async ngOnInit() {\n    //console.log(\"onInit called\");\n    await this.dataService.getOrders().subscribe(data => {\n      //console.log(JSON.stringify(data));\n      this.jsonOrders = data;\n      for (let order of data) {\n        let o = new Order();\n        o.copyInto(order);\n        this.orders.push(o);\n        //console.log(JSON.stringify(order));\n      }\n    });\n\n    // I don't know if this is really needed because it's\n    // already in the orders array.\n    await alasql.promise(\"drop table if exists t_orders\");\n    await alasql.promise(\"create table t_orders (\"\n      + \"id int NOT NULL PRIMARY KEY, \"\n      + \"customerName string, \"\n      + \"productCode string, \"\n      + \"unitsOrdered int, \"\n      + \"unitPrice number, \"\n      + \"status string, \"\n      + \"createdAt date, \"\n      + \"updatedAt date)\"\n    );\n    await alasql.promise(\"insert into t_orders select * from ?\", [this.jsonOrders]);\n  }\n\n  async sortByOrderNumber() {\n    //console.log(\"sorting by order number\");\n    this.orders.sort((a, b) => {\n      if (a.id > b.id)\n        return 1;\n      if (a.id < b.id)\n        return -1;\n      return 0;\n    });\n  }\n\n  async sortByPrice() {\n    //console.log(\"sorting by price\");\n    this.orders.sort((a, b) => {\n      if (a.unitPrice > b.unitPrice)\n        return 1;\n      if (a.unitPrice < b.unitPrice)\n        return -1;\n      return 0;\n    });\n  }\n\n  onDelete(orderId: number) {\n    //console.log(\"deleting order \" + orderId.toString());\n    //console.log(\"length of orders before delete: \" + this.orders.length.toString());\n    for (let i = 0; i < this.orders.length; i++) {\n      if (this.orders[i].id == orderId) {\n        this.orders.splice(i, 1);\n        this.dataService.deleteOrderByIndex(i);\n      }\n    }\n    //console.log(\"length of orders after delete: \" + this.orders.length.toString());\n  }\n\n  addNewOrder() {\n    // find the first available order number\n    let taken = new Array<number>();\n    for (let order of this.orders) {\n      taken.push(order.id);\n    }\n    let id = 1;\n    while (taken.indexOf(id) > -1) {\n      id++;\n    }\n    //console.log(\"Adding new order number \" + id.toString());\n    let newOrder = new Order();\n    newOrder.id = id;\n    newOrder.customerName = \"customer name\";\n    newOrder.productCode = \"FO-100\";\n    newOrder.unitsOrdered = 0;\n    newOrder.unitPrice = 0;\n    newOrder.status = \"NEW\";\n    newOrder.createdAt = new Date();\n    newOrder.updatedAt = new Date();\n    newOrder.temporary = true;\n    this.orders.push(newOrder);\n    this.dataService.addOrder(newOrder);\n    this.router.navigate([\"/edit\", id]);\n    \n  }\n\n\n} // end of OrdersComponent class","import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, of, from } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Order } from '../orders/order';\n\nimport { JsonOrders } from '../../assets/json-orders';\n\n@Injectable()\nexport class DataService {\n\n  public orders: Array<Order> = new Array<Order>();\n\n  constructor() { \n    let jo = new JsonOrders();\n    this.orders = jo.Orders;\n    for (let order of this.orders) {\n      if (order.temporary == undefined) {\n        order.temporary = false;\n      }\n      //console.log(\"temp: \" + order.temporary.toString());\n    }\n  }\n\n  public getOrders(): Observable<Array<Order>> {\n    // Remove temporary orders. This removes orders where\n    // New was called but then cancelled.\n    for (let i = 0; i < this.orders.length; i++) {\n      if (this.orders[i].temporary == true) {\n        this.orders.splice(i, 1);\n      }\n    }\n    return of(this.orders);\n  }\n\n  public getOrder(id: number): Observable<Order> {\n    //console.log(\"id: \" + id.toString());\n    //let orders: Array<Order> = jsonOrders;\n    let order = this.orders\n      .filter((dataItem) => (dataItem.id === id))[0];\n    return of(order);\n  }\n\n  public addOrder(order: Order) {\n    this.orders.push(order);\n  }\n\n  public deleteOrderByIndex(index: number) {\n    this.orders.splice(index, 1);\n  }\n}\n","import { Order } from '../app/orders/order';\nexport class JsonOrders {\n    public Orders: Array<Order> = new Array<Order>();\n    private jsonOrders = [\n        { \"id\": 1, \"customerName\": \"Alice's Antiques\", \"productCode\": \"FOO-100\", \"unitsOrdered\": 25, \"unitPrice\": 12.5, \"status\": \"DELIVERED\", \"createdAt\": \"2016-05-09 14:39:12.849 +00:00\", \"updatedAt\": \"2016-05-09 15:15:15.922 +00:00\" },\n        { \"id\": 2, \"customerName\": \"Bob's Brewery\", \"productCode\": \"FOO-200\", \"unitsOrdered\": 60, \"unitPrice\": 18.75, \"status\": \"SHIPPED\", \"createdAt\": \"2016-05-09 14:40:01.495 +00:00\", \"updatedAt\": \"2016-05-09 15:15:07.999 +00:00\" },\n        { \"id\": 3, \"customerName\": \"Carol's Car Wash\", \"productCode\": \"FOO-100\", \"unitsOrdered\": 100, \"unitPrice\": 9.25, \"status\": \"SHIPPED\", \"createdAt\": \"2016-05-09 14:40:43.407 +00:00\", \"updatedAt\": \"2016-05-09 15:15:24.847 +00:00\" },\n        { \"id\": 4, \"customerName\": \"David's Dog Grooming\", \"productCode\": \"FOO-250\", \"unitsOrdered\": 15, \"unitPrice\": 29.95, \"status\": \"PENDING\", \"createdAt\": \"2016-05-09 14:41:33.081 +00:00\", \"updatedAt\": \"2016-05-09 14:41:33.081 +00:00\" },\n        { \"id\": 5, \"customerName\": \"Elizabeth's Eatery\", \"productCode\": \"FOO-100\", \"unitsOrdered\": 35, \"unitPrice\": 10.95, \"status\": \"PENDING\", \"createdAt\": \"2016-05-09 14:43:12.990 +00:00\", \"updatedAt\": \"2016-05-09 14:43:12.990 +00:00\" }\n    ];\n\n    constructor() {\n        for (let jo of this.jsonOrders) {\n            let o = new Order();\n            o.id = jo.id;\n            o.customerName = jo.customerName;\n            o.productCode = jo.productCode\n            o.unitsOrdered = jo.unitsOrdered;\n            o.unitPrice = jo.unitPrice;\n            o.status = jo.status;\n            o.createdAt = new Date(jo.createdAt);\n            o.updatedAt = new Date(jo.updatedAt);\n            o.temporary = false;\n            this.Orders.push(o);\n        }\n\n    }\n\n}\n\n/*\n\n[\n{\"id\":1,\"customerName\":\"Alice's Antiques\",\"productCode\":\"FOO-100\",\"unitsOrdered\":25,\"unitPrice\":12.5,\"status\":\"DELIVERED\",\"createdAt\":\"2016-05-09 14:39:12.849 +00:00\",\"updatedAt\":\"2016-05-09 15:15:15.922 +00:00\"},\n{\"id\":2,\"customerName\":\"Bob's Brewery\",\"productCode\":\"FOO-200\",\"unitsOrdered\":60,\"unitPrice\":18.75,\"status\":\"SHIPPED\",\"createdAt\":\"2016-05-09 14:40:01.495 +00:00\",\"updatedAt\":\"2016-05-09 15:15:07.999 +00:00\"},\n{\"id\":3,\"customerName\":\"Carol's Car Wash\",\"productCode\":\"FOO-100\",\"unitsOrdered\":100,\"unitPrice\":9.25,\"status\":\"SHIPPED\",\"createdAt\":\"2016-05-09 14:40:43.407 +00:00\",\"updatedAt\":\"2016-05-09 15:15:24.847 +00:00\"},\n{\"id\":4,\"customerName\":\"David's Dog Grooming\",\"productCode\":\"FOO-250\",\"unitsOrdered\":15,\"unitPrice\":29.95,\"status\":\"PENDING\",\"createdAt\":\"2016-05-09 14:41:33.081 +00:00\",\"updatedAt\":\"2016-05-09 14:41:33.081 +00:00\"},\n{\"id\":5,\"customerName\":\"Elizabeth's Eatery\",\"productCode\":\"FOO-100\",\"unitsOrdered\":35,\"unitPrice\":10.95,\"status\":\"PENDING\",\"createdAt\":\"2016-05-09 14:43:12.990 +00:00\",\"updatedAt\":\"2016-05-09 14:43:12.990 +00:00\"}\n]\n\n,\"customerName\":\"Alice's Antiques\",\"productCode\":\"FOO-100\",\"unitsOrdered\":25,\"unitPrice\":12.5,\"status\":\"DELIVERED\",\"createdAt\":1462804752849,\"updatedAt\":1462806915922,\"temporary\":false\n\n\n\n    */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// client id:\n// 492755457190-ccvd44h31u9t4043g72jlvpk2dsel205.apps.googleusercontent.com \nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}